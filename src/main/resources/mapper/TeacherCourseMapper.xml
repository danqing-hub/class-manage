<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.TeacherCourseMapper">
  <resultMap id="BaseResultMap" type="com.model.TeacherCourse">
    <id column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="class_hour" jdbcType="INTEGER" property="classHour" />
    <result column="test_model" jdbcType="VARCHAR" property="testModel" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
    <result column="choice_num" jdbcType="INTEGER" property="choiceNum" />
    <result column="complete" jdbcType="INTEGER" property="complete" />
  </resultMap>

  <resultMap id="BaseResultMapWithTC" type="com.vo.TeacherCourseVo">
    <id column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="class_hour" jdbcType="INTEGER" property="classHour" />
    <result column="test_model" jdbcType="VARCHAR" property="testModel" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
    <result column="choice_num" jdbcType="INTEGER" property="choiceNum" />
    <result column="complete" jdbcType="INTEGER" property="complete" />
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacher_id, course_id, start_date, end_date, class_hour, test_model, student_num, 
    choice_num, complete
  </sql>

  <sql id="Base_Column_List_WithTC">
    teacher_id, course_id, start_date, end_date, class_hour, test_model, student_num,
    choice_num, complete, username, name
  </sql>
  <select id="selectByExample" parameterType="com.model.TeacherCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExampleWithTC" parameterType="com.model.TeacherCourseExample" resultMap="BaseResultMapWithTC">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_WithTC" />
    from teacher_course as B, course as A, teacher as C
    <where>
      B.course_id = A.id and B.teacher_id = C.id
      <if test="searchKey != null and searchKey != ''">
        and(
        (C.username like CONCAT ('%',#{searchKey},'%') )
        or (A.name like CONCAT ('%',#{searchKey},'%') )
        )
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.model.TeacherCourseKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher_course
    where teacher_id = #{teacherId,jdbcType=INTEGER}
      and course_id = #{courseId,jdbcType=INTEGER}
  </select>

  <select id="selectCourseList" parameterType="int" resultMap="BaseResultMapWithTC">
    select
    <include refid="Base_Column_List_WithTC" />
    from teacher_course as B, course as A, teacher as C
    where B.course_id = A.id and B.teacher_id = C.id and teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.model.TeacherCourseKey">
    delete from teacher_course
    where teacher_id = #{teacherId,jdbcType=INTEGER}
      and course_id = #{courseId,jdbcType=INTEGER}
  </delete>

  <select id="getCourseList"  resultMap="BaseResultMapWithTC">
    select
    <include refid="Base_Column_List_WithTC" />
    from teacher_course as C, course as B, teacher as T
    <where>
      C.course_id = B.id and C.teacher_id = T.id and start_date > CURRENT_DATE
      <if test="param2 != null and param2 != '' ">
        and(
        (B.name like CONCAT ('%',#{param2},'%') )
        or (T.username like CONCAT ('%',#{param2},'%') )
        )
      </if>
      and C.complete = 0
      and C.course_id
      <if test="param1 == 1 ">
        not
      </if>
      in (select course_id
      from student_course
      where student_course.student_id= #{param3} )
    </where>
  </select>

  <delete id="deleteByExample" parameterType="com.model.TeacherCourseExample">
    delete from teacher_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.vo.TeacherCourseVo">
    insert into teacher_course (teacher_id, course_id, start_date, 
      end_date, class_hour, test_model, 
      student_num, choice_num, complete
      )
    values (#{teacherId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{classHour,jdbcType=INTEGER}, #{testModel,jdbcType=VARCHAR}, 
      #{studentNum,jdbcType=INTEGER}, #{choiceNum,jdbcType=INTEGER}, #{complete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.TeacherCourse">
    insert into teacher_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="classHour != null">
        class_hour,
      </if>
      <if test="testModel != null">
        test_model,
      </if>
      <if test="studentNum != null">
        student_num,
      </if>
      <if test="choiceNum != null">
        choice_num,
      </if>
      <if test="complete != null">
        complete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="classHour != null">
        #{classHour,jdbcType=INTEGER},
      </if>
      <if test="testModel != null">
        #{testModel,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null">
        #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="choiceNum != null">
        #{choiceNum,jdbcType=INTEGER},
      </if>
      <if test="complete != null">
        #{complete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.TeacherCourseExample" resultType="java.lang.Long">
    select count(*) from teacher_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher_course
    <set>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.classHour != null">
        class_hour = #{record.classHour,jdbcType=INTEGER},
      </if>
      <if test="record.testModel != null">
        test_model = #{record.testModel,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNum != null">
        student_num = #{record.studentNum,jdbcType=INTEGER},
      </if>
      <if test="record.choiceNum != null">
        choice_num = #{record.choiceNum,jdbcType=INTEGER},
      </if>
      <if test="record.complete != null">
        complete = #{record.complete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher_course
    set teacher_id = #{record.teacherId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      class_hour = #{record.classHour,jdbcType=INTEGER},
      test_model = #{record.testModel,jdbcType=VARCHAR},
      student_num = #{record.studentNum,jdbcType=INTEGER},
      choice_num = #{record.choiceNum,jdbcType=INTEGER},
      complete = #{record.complete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.TeacherCourse">
    update teacher_course
    <set>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="classHour != null">
        class_hour = #{classHour,jdbcType=INTEGER},
      </if>
      <if test="testModel != null">
        test_model = #{testModel,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null">
        student_num = #{studentNum,jdbcType=INTEGER},
      </if>
      <if test="choiceNum != null">
        choice_num = #{choiceNum,jdbcType=INTEGER},
      </if>
      <if test="complete != null">
        complete = #{complete,jdbcType=INTEGER},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
      and course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.TeacherCourse">
    update teacher_course
    set start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      class_hour = #{classHour,jdbcType=INTEGER},
      test_model = #{testModel,jdbcType=VARCHAR},
      student_num = #{studentNum,jdbcType=INTEGER},
      choice_num = #{choiceNum,jdbcType=INTEGER},
      complete = #{complete,jdbcType=INTEGER}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
      and course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>